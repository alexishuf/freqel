baseSwagger:
  $ref: "/portal_transparencia.json"
overlay:
  x-parser:
    - parser: "date"
      date-format: "dd/MM/yyyy"
  x-paging:
    param: pagina
    start: 1
    increment: 1
  x-definitions:
    date-serializer:
      serializer: date
      date-format: "dd/MM/yyyy"
    only-numbers:
      serializer: "only-numbers"
  produces: # Original description is bugged and lacks this
    - application/json
  paths:
    /api-de-dados/licitacoes:
      get:
        responses:
          200:
            x-cardinality: LOWER_BOUND(3)
        parameters:
          - name: dataInicial
            x-serializer:
              $ref: "#/x-definitions/date-serializer"
            x-path:
              path: ["dataAbertura"]
              filter:
                sparql: "FILTER($actual >= $input)"
          - name: dataFinal
            x-serializer:
              $ref: "#/x-definitions/date-serializer"
            x-path:
              path: ["dataAbertura"]
              filter:
                sparql: "FILTER($actual <= $input)"
          - name: codigoOrgao
            x-serializer:
              $ref: "#/x-definitions/only-numbers"
            x-path:
              path: ["unidadeGestora", "orgaoVinculado", "codigoSIAFI"]
    /api-de-dados/licitacoes/{id}:
      parameters:
        - name: id
          x-path:
            path: ["id"]
    # This is a completely new endpoint. It is used in tests with optional inputs
    # See ProcurementsService#getProcurementsOpt() for the service implementation
    # and PlannerTest#test.*Optional.*() methods.
    /api-de-dados/licitacoes-opt:
      get:
        tags:
          - Licita\u00e7\u00f5es do Poder Executivo Federal
        summary: Consulta todas as licita\u00e7\u00f5es do Poder Executivo Federal
        description: "Filtros m\u00ednimos:  P\u00e1gina (padr\u00e3o = 1);  Per\u00edodo de no m\u00e1ximo 1 m\u00eas; C\u00f3digo do \u00d3rg\u00e3o (SIAFI)"
        operationId: licitacoesOptUsingGET
        # These two are correct here, but inverted in the official Swagger
        consumes: ["*/*"]
        produces: ["application/json"]
        parameters:
          - name: dataInicial
            in: query
            description: Data de abertura inicial (DD/MM/AAAA)
            # required is by default false!
            # required: false
            type: string
            x-serializer:
              $ref: "#/x-definitions/date-serializer"
            x-path:
              path: [dataAbertura]
              filter:
                sparql: "FILTER($actual >= $input)"
          - name: dataFinal
            in: query
            description: Data de abertura final (DD/MM/AAAA)
            type: string
            x-serializer:
              $ref: "#/x-definitions/date-serializer"
            x-path:
              path: [dataAbertura]
              filter:
                sparql: "FILTER($actual <= $input)"
          - name: minValor
            in: query
            description: Valor mínimo
            type: number
            x-path:
              path: [valor]
              filter:
                sparql: "FILTER($actual >= $input)"
          - name: maxValor
            in: query
            description: Valor máximo
            type: number
            x-path:
              path: [valor]
              filter:
                sparql: "FILTER($actual <= $input)"
          - name: codigoOrgao
            in: query
            description: Código do Órgão (SIAFI)
            type: string
            x-serializer:
              $ref: "#/x-definitions/only-numbers"
            x-path:
              path: [unidadeGestora, orgaoVinculado, codigoSIAFI]
          - name: codigoSituacao
            in: query
            description: Código da situação da compra
            type: integer
            x-path:
              path: [situacaoCompra, codigo]
          - name: pagina
            in: query
            description: Página consultada
            required: true
            type: integer
            default: 1
            format: "int32"
        responses:
          200:
            description: OK
            schema:
              type: array
              items:
                $ref: "#/definitions/Licitacao"
          401:
            description: Unauthorized
          403:
            description: Forbidden
          404:
            description: Not Found
